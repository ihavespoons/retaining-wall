<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonOK.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>